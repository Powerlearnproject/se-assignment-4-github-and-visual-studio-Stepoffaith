1. Version Control: GitHub uses Git, a popular version control system, to track changes to code and manage different versions of a project. This allows developers to work on different parts of the codebase simultaneously without conflicts and easily revert to previous versions if needed.
Repositories: GitHub organizes projects into repositories, which can contain code, documentation, and other resources related to the project. Each repository has its own issues tracker, wiki, and project management tools.
Collaboration Tools:  GitHub provides features like pull requests, which allow developers to propose changes to the codebase, review each other's code, and discuss any modifications before merging them into the main branch. This facilitates code review and ensures quality control.
Branching and Merging: Developers can create branches in a repository to work on new features or bug fixes without affecting the main codebase. Once the changes are tested and approved, they can be merged back into the main branch.
Issues and Projects: GitHub's issue tracker allows team members to report bugs, request features, and discuss tasks related to the project. Projects feature helps in organizing and prioritizing tasks, tracking progress, and assigning work to team members.
Forks and Cloning:  Developers can fork a repository to create a personal copy of the project, make changes independently, and then submit a pull request to contribute back to the original project. Cloning allows developers to download a copy of a repository to their local machine for development.
2. Login to GitHub. Create a New Repository
   Click on the + icon in the top-right corner and select new repository.
   Enter name for repository.
   make public or private.
   Add description and select  additional options like initializing with a README file.
   Click on the Create repository button.
Clone the Repository:  Once you have created the repository, you can clone it to your local machine using the repository URL provided.
Set Up Git:
   Install Git on your local machine.
   Configure Git with name and email.
Add files to the Repository:
   Create or move the files you want to include in your project into the repository on your local machine.
   Use the following commands such as
     git add .
     git commit -m "Initial commit"
     git push origin master
3. Version control is a system that records changes to files over time.
One of the key features of Git is branching, which allows developers to create separate lines of development. Branches enable developers to work on different features or bug fixes without affecting the main project until they are ready to merge their changes back in.
GitHub offers a range of features that improve version control workflows, such as pull requests, issues, code reviews, and project management tools. Pull requests allow developers to propose changes, review code, and discuss modifications before merging them into the main project.
Branching and merging are essential features in Git and GitHub, enabling developers to work on projects concurrently, collaborate effectively, and manage changes seamlessly. Developers can create branches to work on specific features or fixes, make modifications, then merge those changes back into the main branch when they are ready.
4. 
