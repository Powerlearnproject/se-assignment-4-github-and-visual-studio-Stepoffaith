1. Version Control: GitHub uses Git, a popular version control system, to track changes to code and manage different versions of a project. This allows developers to work on different parts of the codebase simultaneously without conflicts and easily revert to previous versions if needed.
Repositories: GitHub organizes projects into repositories, which can contain code, documentation, and other resources related to the project. Each repository has its own issues tracker, wiki, and project management tools.
Collaboration Tools:  GitHub provides features like pull requests, which allow developers to propose changes to the codebase, review each other's code, and discuss any modifications before merging them into the main branch. This facilitates code review and ensures quality control.
Branching and Merging: Developers can create branches in a repository to work on new features or bug fixes without affecting the main codebase. Once the changes are tested and approved, they can be merged back into the main branch.
Issues and Projects: GitHub's issue tracker allows team members to report bugs, request features, and discuss tasks related to the project. Projects feature helps in organizing and prioritizing tasks, tracking progress, and assigning work to team members.
Forks and Cloning:  Developers can fork a repository to create a personal copy of the project, make changes independently, and then submit a pull request to contribute back to the original project. Cloning allows developers to download a copy of a repository to their local machine for development.
2. 
